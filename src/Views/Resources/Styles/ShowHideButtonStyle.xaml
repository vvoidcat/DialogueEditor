<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:common="clr-namespace:DialogueEditor.Views.CommonControls">

    <Style x:Key="ShowHideButtonStyle" TargetType="Button">
        <Setter Property="BorderBrush" Value="{DynamicResource BordersBrush}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundPrimaryBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter 
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center" 
                            TextElement.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource LightToPrimaryAccentCenteredGradient}" />
                            <Setter Property="BorderThickness" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource TextSecondaryBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            
            <DataTrigger Binding="{Binding Direction, RelativeSource={RelativeSource AncestorType={x:Type common:ShowHideButtonControl}}}" Value="Up">
                <Setter Property="BorderThickness" Value="0 1 0 0"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Direction, RelativeSource={RelativeSource AncestorType={x:Type common:ShowHideButtonControl}}}" Value="Down">
                <Setter Property="BorderThickness" Value="0 0 0 1"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Direction, RelativeSource={RelativeSource AncestorType={x:Type common:ShowHideButtonControl}}}" Value="Right">
                <Setter Property="BorderThickness" Value="0 0 1 0"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Direction, RelativeSource={RelativeSource AncestorType={x:Type common:ShowHideButtonControl}}}" Value="Left">
                <Setter Property="BorderThickness" Value="1 0 0 0"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource AncestorType={x:Type common:ShowHideButtonControl}}}" Value="Horizontal">
                <Setter Property="Height" Value="20"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource AncestorType={x:Type common:ShowHideButtonControl}}}" Value="Vertical">
                <Setter Property="Width" Value="20"/>
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="ShowHideButtonGridStyle" TargetType="{x:Type Grid}">
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <RotateTransform Angle="0"/>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource AncestorType={x:Type common:ShowHideButtonControl}}}" 
                         Value="Vertical">
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ShowHideButtonLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
        <Setter Property="Margin" Value="0"/>

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <RotateTransform Angle="0"/>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Orientation, RelativeSource={RelativeSource AncestorType={x:Type common:ShowHideButtonControl}}}" 
                       Value="Vertical"/>
                    <Condition Binding="{Binding Direction, RelativeSource={RelativeSource AncestorType={x:Type common:ShowHideButtonControl}}}" 
                       Value="Left"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="180"/>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ShowHideButtonLabelArrowStyle" TargetType="{x:Type Label}"  BasedOn="{StaticResource ShowHideButtonLabelStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsOpen, RelativeSource={RelativeSource AncestorType={x:Type common:ShowHideButtonControl}}}" Value="True">
                <Setter Property="Content" Value="▼"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsOpen, RelativeSource={RelativeSource AncestorType={x:Type common:ShowHideButtonControl}}}" Value="False">
                <Setter Property="Content" Value="▲"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>